<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	
	<bean id="dataSourceQuery" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <property name="driverClassName" value="com.p6spy.engine.spy.P6SpyDriver" /> -->
		<property name="driverClassName" value="${jdbc_query_driverClassName}" />
		<property name="url" value="${jdbc_query_url}" />
		<property name="username" value="${jdbc_query_username}" />
		<property name="password" value="${jdbc_query_password}" />
	</bean>
	
	<!-- <bean id="dataSourceQuery" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" depends-on="sysProps">
      <property name="driverClass">
        <value>${jdbc_query_driverClassName}</value>
      </property>
      <property name="jdbcUrl">
        <value>${jdbc_query_url}</value>
      </property>
      <property name="user">
       <value>${jdbc_query_username}</value>
      </property>
      <property name="password">
       <value>${jdbc_query_password}</value>
      </property>
      <property name="initialPoolSize"><value>1</value></property>初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值。默认为3 
      <property name="minPoolSize"><value>10</value></property>连接池中保留的最小连接数。默认为15
      <property name="maxPoolSize"><value>100</value></property>连接池中保留的最大连接数。默认为15；
      //<property name="acquireIncrement"><value>10</value></property>当连接池中的连接用完时，C3P0一次性创建新连接的数目
      <property name="maxIdleTime"><value>240</value></property>最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0
      //<property name="maxStatements"><value>0</value></property>JDBC的标准参数，用以控制数据源内加载的PreparedStatement数量 但由于预缓存的Statement属 于单个Connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素，如果maxStatements与 maxStatementsPerConnection均为0，则缓存被关闭。默认为0
      <property name="checkoutTimeout"><value>60000</value></property>当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒
      <property name="acquireRetryAttempts"><value>0</value></property>定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30
      //<property name="idleConnectionTestPeriod"><value>1800</value></property>隔多少秒检查所有连接池中的空闲连接，默认为0表示不检查
      <property name="acquireRetryDelay"><value>1000</value></property>两次连接中间隔时间，单位毫秒，默认为1000
      //<property name="maxStatementsPerConnection"><value>100</value></property >连接池内单个连接所拥有的最大缓存Statement数。默认为0
      //<property name="autoCommitOnClose"><value>true</value></property>连接关闭时默认将所有未提交的操作回滚。默认为false
      //<property name="breakAfterAcquireFailure"><value>true</value></property>获取连接失败将会引起所有等待获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调   用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认为 false
      <property name="debugUnreturnedConnectionStackTraces" value="true" />是一个开关，启用之后，对于每个从连接池拿出去的数据库连接，如果一段时间内没有归还，C3P0就会强制关闭这个连接，并将获取连接时的stack trace，以抛出异常的方式显示出来。 unreturnedConnectionTimeout设置多长时间会超时，以秒为单位。
      <property name="unreturnedConnectionTimeout" value="300" />
      <property name="numHelperThreads"><value>10</value></property>c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能
    </bean> -->

	<!-- mybatis (start) -->
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactoryQuery" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceQuery" />
		<property name="typeAliasesPackage" value="com.miracle.mode" />
		<!-- <property name="configLocation" value="classpath:com/taikoomotors/ep/dao/mybatis/conf/mybatis-config.xml" 
			/> -->
		<property name="mapperLocations" value="classpath*:com/miracle/dao/mybatis/maps/*.xml" />
		<!-- 分頁另一種方式直接配置在Mybatis xml  -->	
		<!-- <property name="configLocation" value="classpath:com/order/dao/mybatis/conf/mybatis-config.xml"/> -->
		<!-- 分頁 -->
		<property name="plugins">
	        <array>
	            <ref bean="paginationInterceptor"/>
	        </array>
	    </property>
	</bean>
	<!-- 分頁 -->
	<bean id="paginationInterceptor" class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
		<property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect" />
	</bean>
	<!-- mybatis (end) -->

	<bean id="transactionManagerQuery"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceQuery" />
	</bean>

	
	
	<bean id="dataSourceTrs" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc_trs_driverClassName}" />
		<property name="url" value="${jdbc_trs_url}" />
		<property name="username" value="${jdbc_trs_username}" />
		<property name="password" value="${jdbc_trs_password}" />
	</bean>
	
	<!-- <bean id="dataSourceTrs" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" depends-on="sysProps">
      <property name="driverClass">
        <value>${jdbc_trs_driverClassName}</value>
      </property>
      <property name="jdbcUrl">
        <value>${jdbc_trs_url}</value>
      </property>
      <property name="user">
       <value>${jdbc_trs_username}</value>
      </property>
      <property name="password">
       <value>${jdbc_trs_password}</value>
      </property>
      <property name="initialPoolSize"><value>1</value></property>初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值。默认为3 
      <property name="minPoolSize"><value>10</value></property>连接池中保留的最小连接数。默认为15
      <property name="maxPoolSize"><value>100</value></property>连接池中保留的最大连接数。默认为15；
      //<property name="acquireIncrement"><value>10</value></property>当连接池中的连接用完时，C3P0一次性创建新连接的数目
      <property name="maxIdleTime"><value>240</value></property>最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0
      //<property name="maxStatements"><value>0</value></property>JDBC的标准参数，用以控制数据源内加载的PreparedStatement数量 但由于预缓存的Statement属 于单个Connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素，如果maxStatements与 maxStatementsPerConnection均为0，则缓存被关闭。默认为0
      <property name="checkoutTimeout"><value>60000</value></property>当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒
      <property name="acquireRetryAttempts"><value>0</value></property>定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30
      //<property name="idleConnectionTestPeriod"><value>1800</value></property>隔多少秒检查所有连接池中的空闲连接，默认为0表示不检查
      <property name="acquireRetryDelay"><value>1000</value></property>两次连接中间隔时间，单位毫秒，默认为1000
      //<property name="maxStatementsPerConnection"><value>100</value></property >连接池内单个连接所拥有的最大缓存Statement数。默认为0
      //<property name="autoCommitOnClose"><value>true</value></property>连接关闭时默认将所有未提交的操作回滚。默认为false
      //<property name="breakAfterAcquireFailure"><value>true</value></property>获取连接失败将会引起所有等待获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调   用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认为 false
      <property name="debugUnreturnedConnectionStackTraces" value="true" />是一个开关，启用之后，对于每个从连接池拿出去的数据库连接，如果一段时间内没有归还，C3P0就会强制关闭这个连接，并将获取连接时的stack trace，以抛出异常的方式显示出来。 unreturnedConnectionTimeout设置多长时间会超时，以秒为单位。
      <property name="unreturnedConnectionTimeout" value="300" />
      <property name="numHelperThreads"><value>10</value></property>c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能
    </bean> --> 

	<bean id="sqlSessionFactoryTrs" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceTrs" />
		<property name="typeAliasesPackage" value="com.miracle.mode" />
		<!-- <property name="configLocation" value="classpath:com/taikoomotors/ep/dao/mybatis/conf/mybatis-config.xml" 
			/> -->
		<property name="mapperLocations" value="classpath*:com/miracle/dao/mybatis/maps/*.xml" />
	</bean>

	<aop:config>
    	<aop:pointcut id="businessService"
    	 expression="execution(* com.miracle.service.*.*(..))"/>
		<aop:advisor pointcut-ref="businessService" advice-ref="txAdvice"/>
  	</aop:config>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceTrs" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	  <tx:attributes>
	    <tx:method name="save*" propagation="REQUIRED"/>
	    <tx:method name="insert*" propagation="REQUIRED"/>
	    <tx:method name="update*" propagation="REQUIRED"/>
	    <tx:method name="create*" propagation="REQUIRED"/>
	  </tx:attributes>
	</tx:advice> 
	
	
    <tx:annotation-driven transaction-manager="transactionManager" />
	
	

</beans>