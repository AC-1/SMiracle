<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.miracle.dao.CollegeQTrsDAO">

	<!-- <cache /> -->
	
	<resultMap id="campActivitySignupVOMap" type="CampActivitySignupVO">
		<result property="signupId" column="SIGNUP_ID" />
		<result property="activityId" column="ACTIVITY_ID" />
		<result property="collegeId" column="COLLEGE_ID" />
		<result property="ifCheckIn" column="IF_CHECK_IN" />
		<result property="signupDate" column="SIGNUP_DATE" />
		<result property="collegeName" column="COLLEGE_NAME" />
		<result property="collegeArea" column="COLLEGE_AREA" />
		<result property="collegeGroup" column="COLLEGE_GROUP" />
		<result property="collegeGender" column="COLLEGE_GENDER" />
		<result property="collegeBirthday" column="COLLEGE_BIRTHDAY" />
		<result property="collegeSchoolGrade" column="COLLEGE_SCHOOL_GRADE" />
		<result property="collegePhone" column="COLLEGE_PHONE" />
		<result property="collegeTel" column="COLLEGE_TEL" />
	</resultMap>
	
	<resultMap id="collegePeopleVOMap" type="CollegePeopleVO">
		<result property="collegeId" column="COLLEGE_ID" />
		<result property="collegeName" column="COLLEGE_NAME" />
		<result property="collegeArea" column="COLLEGE_AREA" />
		<result property="collegeGroup" column="COLLEGE_GROUP" />
		<result property="collegeGender" column="COLLEGE_GENDER" />
		<result property="collegeBirthday" column="COLLEGE_BIRTHDAY" />
		<result property="collegeSchoolGrade" column="COLLEGE_SCHOOL_GRADE" />
		<result property="collegePhone" column="COLLEGE_PHONE" />
		<result property="collegeTel" column="COLLEGE_TEL" />
		<result property="checkInTime" column="CHECK_IN_TIME" />
	</resultMap>
	
	
	
	<select id="findIfCollegeCampCheckIn" parameterType="string" resultType="integer">
		select count(0) count from college_camp_check_in 
		where to_days(CHECK_IN_TIME) = to_days(NOW())
		and COLLEGE_ID = #{collegeId}
	</select>
	
	
	<select id="findCampActivitySignupAllByActivityId" parameterType="string" resultMap="campActivitySignupVOMap">
		select A.SIGNUP_ID, A.ACTIVITY_ID, A.COLLEGE_ID, A.IF_CHECK_IN, A.SIGNUP_DATE,
		       B.COLLEGE_NAME, B.COLLEGE_AREA, B.COLLEGE_GROUP, B.COLLEGE_GENDER, B.COLLEGE_BIRTHDAY, 
		       B.COLLEGE_SCHOOL_GRADE, B.COLLEGE_PHONE, B.COLLEGE_TEL
		from camp_activity_signup A
		left join college_people B on A.COLLEGE_ID = B.COLLEGE_ID
		where A.ACTIVITY_ID = #{activityId}
	</select>
	
	<select id="findCollegePeopleCheckInAllByDate" parameterType="map" resultMap="collegePeopleVOMap">
		select A.CHECK_IN_TIME, B.COLLEGE_ID, B.COLLEGE_NAME, B.COLLEGE_AREA, B.COLLEGE_GROUP, B.COLLEGE_GENDER, B.COLLEGE_BIRTHDAY, 
		       B.COLLEGE_SCHOOL_GRADE, B.COLLEGE_PHONE, B.COLLEGE_TEL
		from  college_camp_check_in A 
		left join college_people B on A.COLLEGE_ID = B.COLLEGE_ID 
		where A.CAMP_DATE = #{campDate}
		AND A.ACTIVITY_ID = #{activityId}
	</select>
	
	
	<select id="findCollegePeopleNoCheckInAllByDate" parameterType="map" resultMap="collegePeopleVOMap">
		SELECT COLLEGE_ID, COLLEGE_NAME, COLLEGE_AREA, COLLEGE_GROUP, COLLEGE_GENDER, COLLEGE_BIRTHDAY, COLLEGE_SCHOOL_GRADE,
		       COLLEGE_PHONE, COLLEGE_TEL
		from college_people 
		where COLLEGE_ID not in (
			select COLLEGE_ID from college_camp_check_in where CAMP_DATE = #{campDate}
			and ACTIVITY_ID = #{activityId}
		 )
	</select>
	
	
	<insert id="createCollegeCampCheckIn" parameterType="collegeCampCheckIn">
		insert into college_camp_check_in ( CHECK_IN_ID, COLLEGE_ID, CHECK_IN_TIME, CHECK_IN_LAST_TIME, IF_CHECK_IN, CAMP_DATE, ACTIVITY_ID )
		values (#{checkInId}, #{collegeId}, now(), now(), 'Y', #{campDate}, #{activityId})
	</insert>
	
	<update id="updateCollegeCampCheckIn" parameterType="string">
		update college_camp_check_in
		set CHECK_IN_LAST_TIME=now()
		where COLLEGE_ID=#{collegeId}
		and to_days(CHECK_IN_TIME) = to_days(NOW())
	</update>

</mapper>
